server.port=8080

# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Generates the database *only* if it's not there yet
#spring.jpa.hibernate.ddl-auto=update
# Creates the database in a file
spring.datasource.url=jdbc:h2:file:~/social-multiplication;
DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
# For educational purposes we will show the SQL in console
#spring.jpa.properties.hibernate.show_sql=true

#show sql statement
logging.level.org.hibernate.SQL=debug
#show sql values
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

## RabbitMQ configuration
multiplication.exchange=multiplication_exchange
multiplication.solved.key=multiplication.solved

# Service Discovery configuration
eureka.client.service-url.default-zone=http://localhost:8761/eureka/

#https://github.com/spring-cloud/spring-cloud-commons/issues/355
spring.cloud.refresh.enabled=false